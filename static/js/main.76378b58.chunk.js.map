{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","doneCount","todoCount","className","ItemStatusFilter","buttons","name","label","this","props","onFilter","filter","map","clazz","type","onClick","Component","SearchPanel","onSearch","term","placeholder","onChange","e","target","value","TodoListItem","done","important","onDeleted","onToggleImportant","onToggleDone","classNames","TodoList","todos","elements","el","id","itemProps","ItemAddForm","state","onLabelChange","setState","onSubmit","preventDefault","onAddItem","App","idCounter","todoData","createTodoItem","deleteItem","idx","findIndex","slice","addItem","newItem","toggleImportant","toggleProperty","toggleDone","arr","propName","items","length","item","toLowerCase","indexOf","visibleItems","search","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76378b58.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({ doneCount, todoCount }) => {\r\n    return (\r\n        <div className=\"app-header\">\r\n            <h2>Мои задачи</h2>\r\n            <span>{todoCount} осталось, {doneCount} выполнено</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppHeader;\r\n","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        { name: 'all', label: 'Все' },\r\n        { name: 'active', label: 'Актив.' },\r\n        { name: 'done', label: 'Заверш.' }\r\n    ];\r\n\r\n    render() {\r\n        const { onFilter, filter } = this.props;\r\n\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n\r\n            const clazz = filter === name ? 'active' : null;\r\n\r\n            return (\r\n                <button\r\n                    key={name}\r\n                    type='button'\r\n                    className={`btn btn-outline-primary ${clazz}`}\r\n                    onClick={() => onFilter(name)}>\r\n                    {label}\r\n                </button>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className='btn-group'> {buttons} </div>\r\n        );\r\n    }\r\n}\r\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;\r\n","import React from 'react';\r\n\r\nimport ItemStatusFilter from '../item-status-filter';\r\n\r\nimport './search-panel.css';\r\n\r\nconst SearchPanel = ({ onSearch, term, ...props }) => {\r\n\r\n    const onSearchChange = (e) => {\r\n        onSearch(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className='search-panel'>\r\n            <input\r\n                placeholder='Поиск...'\r\n                className='form-control'\r\n                onChange={onSearchChange}\r\n                value={term} />\r\n            <ItemStatusFilter {...props} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchPanel;\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = ({ label, done, important, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n    let classNames = 'todo-list-item';\r\n\r\n    if (done) {\r\n        classNames += ' done';\r\n    }\r\n    if (important) {\r\n        classNames += ' important';\r\n    }\r\n\r\n    return (\r\n        <span className={classNames}>\r\n            <span\r\n                className='todo-list-item-label'\r\n                onClick={onToggleDone} >\r\n                {label}\r\n            </span>\r\n\r\n            <button\r\n                type='button'\r\n                className='btn btn-outline-danger btn-sm'\r\n                onClick={onDeleted}>\r\n                <i className='fa fa-trash'></i>\r\n            </button>\r\n            <button\r\n                type='button'\r\n                className='btn btn-outline-success btn-sm'\r\n                onClick={onToggleImportant}>\r\n                <i className='fa fa-exclamation'></i>\r\n            </button>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default TodoListItem;\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\n\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone, filter }) => {\r\n    const elements = todos.map((el) => {\r\n        const { id, ...itemProps } = el;\r\n\r\n        return (\r\n            <li className=\"list-group-item\" key={id}>\r\n                <TodoListItem {...itemProps}\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleImportant={() => { onToggleImportant(id) }}\r\n                    onToggleDone={() => { onToggleDone(id) }}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"todo-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;\r\n","import React, { Component } from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n    state = {\r\n        label: ''\r\n    }\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.label) {\r\n            this.props.onAddItem(this.state.label);\r\n\r\n            this.setState({\r\n                label: ''\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\r\n                <input type=\"text\"\r\n                    className='form-control mr-1'\r\n                    onChange={this.onLabelChange}\r\n                    placeholder=\"Нужно сделать...\"\r\n                    value={this.state.label} />\r\n                <button className=\"btn btn-outline-secondary\">Добавить</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    idCounter = 1;\r\n\r\n    state = {\r\n        term: '',\r\n        filter: 'all', // all, active, done\r\n        todoData: [\r\n            this.createTodoItem('Выпить кофе'),\r\n            this.createTodoItem('Сделать кртуое приложение'),\r\n            this.createTodoItem('Учить react')\r\n        ]\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            done: false,\r\n            important: false,\r\n            id: this.idCounter++\r\n        };\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex(el => el.id === id);\r\n\r\n            const newTodoData = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newTodoData\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem = (label) => {\r\n        this.setState(({ todoData }) => {\r\n\r\n            const newItem = this.createTodoItem(label);\r\n\r\n            const newTodoData = [\r\n                ...todoData,\r\n                newItem\r\n            ]\r\n\r\n            return {\r\n                todoData: newTodoData\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex(el => el.id === id);\r\n\r\n        const newItem = {\r\n            ...arr[idx],\r\n            [propName]: !arr[idx][propName]\r\n        }\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    toggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        });\r\n    }\r\n\r\n    search(items, term) {\r\n        if (!term.length) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter(item => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    }\r\n\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter(item => !item.done);\r\n            case 'done':\r\n                return items.filter(item => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    onFilter = (filter) => {\r\n        this.setState({ filter });\r\n    }\r\n\r\n    onSearch = (term) => {\r\n        this.setState({ term });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { todoData, term, filter } = this.state;\r\n\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData.filter(el => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"app-container container\">\r\n                <AppHeader doneCount={doneCount} todoCount={todoCount} />\r\n                <SearchPanel\r\n                    onSearch={this.onSearch}\r\n                    term={term}\r\n                    onFilter={this.onFilter}\r\n                    filter={filter} />\r\n                <TodoList\r\n                    todos={visibleItems}\r\n                    onDeleted={this.deleteItem}\r\n                    onToggleImportant={this.toggleImportant}\r\n                    onToggleDone={this.toggleDone} />\r\n                <ItemAddForm onAddItem={this.addItem} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}